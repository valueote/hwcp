int swap (int array[], int i, int j){
    int temp;
    temp = array[i];
    array[i] = array[j];
    array[j] = temp;
    return 0;  
}
int heapify(int arr[], int start, int end) {  
    int parent;
    parent = start;  
    int child;
    child = parent * 2 + 1;  
    while (child < end + 1) { //   
        if (child < end && arr[child] < arr[child + 1])
            child = child + 1;  
        if (arr[parent] > arr[child])
            return 0;  
        else {
            parent = swap(arr,parent,child);  
            parent = child;  
            child = parent * 2 + 1;  
        }  
    }  
    return 0;  
}  
int heap_sort(int arr[], int len) {  
    int i;  
    int tmp;
    i = len / 2 - 1;
    while ( i > -1) {
        tmp = len - 1;
        tmp = heapify(arr, i, tmp);  
        i = i - 1;
    }    
    i = len - 1;   
    while ( i > 0) {  
        int tmp0;
        tmp0 = 0;
        tmp = swap(arr,tmp0,i);
        tmp = i - 1;
        tmp = heapify(arr, tmp0, tmp);  
        i = i-1;
    }  
    return 0;
}  

int main(){
    int n = 10;
    int a[10];
    for(int i = 0; i < 10; i++)
      a[i] = getint(a);
    int i;
    i = 0;
    i = heap_sort(a, n);
    putch(10);
    while (i < n) {
        int tmp;
        tmp = a[i];
        putint(tmp);
        tmp = 10;
        putch(tmp);
        i = i + 1;
    }
    return 0;
}
